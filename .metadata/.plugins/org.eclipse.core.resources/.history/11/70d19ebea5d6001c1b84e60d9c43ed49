 호출된 메소드를 찾을 때 참조하게 되는 두 가지 정보 1. 메소드의 이름 2. 메소드의 매개변수 정보
 메소드 호출 규칙에 맞게 잘 호출하기
 메소드 오버로딩 : 메소드의 이름은 같고 매개변수 선언이 다른 메소드들
 매개변수의 정보가 달라지면 인자에 따라 메소드 구분이 가능하다.
 단, 반환형은 메소드 오버로딩이 조건 아님!
 매개변수의 자료형, 매개변수의 수가 다른것-> 메소드의 선언이 다르다고 함.-> 메소드 오버로딩

 오버로딩 관련 피해야할 애매한 상황 void simple(int p1, int p2){}와 void(int p1, double p2){}
 a.simple(7,'k');를 호출하다면 char변수는 int형 변수로 자동형변환 가능하며, 동시에 double형 변환이 가능하나 
 메소드 호출 과정에서도(매개변수) 자동형 변환이 가능하다.
	
	
 생성자의 오버로딩 : 생성자는 메소드의 일종으로 오버로딩이 가능하다.
 this 키워드를 이용한 다른 생성자의 호출 방법으로
 Person(int rnum){ this(rnum, 0);} 도 가능하다.
 this의 의미 : 인스턴스를 가리킴. 생성자 안에 쓰일 경우, 이 인스턴스의 다른 생성자을 뜻함
 
 this뒤에 .(접근 연산자)가 붙여지면 인스턴스 변수를 의미함.
 
 String 클래스는 immutable인스턴스로 한번 생성되면 인스턴스를 바꾸지 못함.
 String str1, String str2 = str1 ->str1과 str2는 참조하는 것이 전부.